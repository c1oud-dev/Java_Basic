<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="10ae204e-e7de-4743-bbb7-9fa636b4d27f" name="Changes" comment="[Java Basic] Modify readme">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2hrSWTOMJfyWZ7QLCiFJUSHIRuH" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/study/inflearn/java-basic/src/poly/ex5&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;vcs.Git&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;GitStage.ChangesTree.GroupingKeys&quot;: [
      &quot;directory&quot;,
      &quot;module&quot;,
      &quot;repository&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\study\inflearn\java-basic\src\poly\ex5" />
      <recent name="C:\study\inflearn\java-basic\src\poly\ex4" />
      <recent name="C:\study\inflearn\java-basic\src\poly\ex3" />
      <recent name="C:\study\inflearn\java-basic\src\poly\ex2" />
      <recent name="C:\study\inflearn\java-basic\src\extends1\overriding" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="poly.ex.pay1" />
      <recent name="poly.ex2" />
      <recent name="extends1.overriding" />
      <recent name="extends1.ex3" />
      <recent name="final1" />
    </key>
  </component>
  <component name="RunManager" selected="Application.PayMain1">
    <configuration name="CarMain0" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="poly.car0.CarMain0" />
      <module name="java-basic" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="poly.car0.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CarMain1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="poly.car1.CarMain1" />
      <module name="java-basic" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="poly.car1.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PayMain0" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="poly.ex.pay0.PayMain0" />
      <module name="java-basic" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="poly.ex.pay1.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PayMain1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="poly.ex.pay1.PayMain1" />
      <module name="java-basic" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="poly.ex.pay1.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SendMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="poly.ex.sender.SendMain" />
      <module name="java-basic" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="poly.ex.sender.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.PayMain1" />
        <item itemvalue="Application.PayMain0" />
        <item itemvalue="Application.SendMain" />
        <item itemvalue="Application.CarMain1" />
        <item itemvalue="Application.CarMain0" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="10ae204e-e7de-4743-bbb7-9fa636b4d27f" name="Changes" comment="" />
      <created>1718350734880</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718350734880</updated>
    </task>
    <task id="LOCAL-00001" summary="initial commit">
      <created>1718351040703</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1718351040703</updated>
    </task>
    <task id="LOCAL-00002" summary="[Java Basic] Class and Data&#10;class declaration, how to use&#10;moviewreview solution&#10;productorder solution">
      <created>1718362885113</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1718362885113</updated>
    </task>
    <task id="LOCAL-00003" summary="[Java Basic] Basic type, Reference type&#10;varchange, null, exception, methodchange&#10;productorder refactoring solution and add scanner">
      <created>1718690863455</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1718690863455</updated>
    </task>
    <task id="LOCAL-00004" summary="[Java Basic] Object-Oriented Programming&#10;1. Procedural Programming &#10;refactoring(data bundling, method extraction) &#10;2. RectangleProcedural, Account solution">
      <created>1718770923456</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1718770923456</updated>
    </task>
    <task id="LOCAL-00005" summary="[Java Basic] Constructor&#10;1. The reason why constructor is necessary&#10;&#10;2. this method&#10;&#10;3. Use constructor in code&#10;&#10;4. Overloading and this() method&#10;&#10;5. Book solution">
      <created>1718884674495</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1718884674495</updated>
    </task>
    <task id="LOCAL-00006" summary="[Java Basic] Package&#10;1. How to use package&#10;&#10;2. Import &#10;&#10;3. Package rule&#10;&#10;4. Use the package">
      <created>1718940318839</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1718940318839</updated>
    </task>
    <task id="LOCAL-00007" summary="[Java Basic] Access Modifier&#10;1. How to use the access controller by controlling the volume of the speaker&#10;&#10;2. Access Controller Type&#10;- private, default, protected, public&#10;&#10;3. How to use access controllers in fields and methods&#10;&#10;4. How to use the access controller at the class level&#10;&#10;5. Encapsulation(BankAccount)&#10;&#10;6. MaxCounter, ShoppingCart solution">
      <created>1719121683349</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1719121683349</updated>
    </task>
    <task id="LOCAL-00008" summary="[Java Basic] Access Modifier &#10;Q.ShoppingCart resolving">
      <created>1719314733772</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1719314733772</updated>
    </task>
    <task id="LOCAL-00009" summary="[Java Basic] Java Memory Structure and Static&#10;&#10;1. Java Memory Structure&#10;&#10;2. Stack and Queue&#10;&#10;3. Stack Area&#10;&#10;4. Stack and Queue Area&#10;&#10;5. static variable&#10;&#10;6. static Method&#10;&#10;7. Solution&#10; - Car&#10; - MathArrayUtils">
      <created>1724071879810</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1724071879810</updated>
    </task>
    <task id="LOCAL-00010" summary="[Java Basic] final&#10;&#10;1. fianl variable &#10;- Reason for using final variable&#10;&#10;2. fianl variable and constant&#10;- constant keyword&#10;- use Upperword&#10;&#10;3. final variable and reference">
      <created>1724595544912</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1724595544912</updated>
    </task>
    <task id="LOCAL-00011" summary="[Java Basic] Inheritance&#10;&#10;1. An inheritance&#10;- the necessity of inheritance&#10;&#10;2. An inheritance relationship&#10;- keyword 'extends'&#10;- superclass and sub_class&#10;- Java doesn't support multiple inheritances.&#10;&#10;3. Inheritance and Memory Structure&#10;- Creating objects in inheritance relationships creates both parent and child classes.&#10;- When calling an inheritance relationship, the target type must be determined and the target type is found through the caller's type.&#10;- If the feature is not found in the current type, find it in the parent type, run it, and fail to find the feature, a compilation error occurs&#10;&#10;4. Inheritance and Add function&#10;&#10;5. Inheritance and Method Overriding&#10;&#10;6. Inheritance and Access Control&#10;- public : Allow all external calls&#10;- protected : Inheritance relationship can be called even if the package is the same or different&#10;- default : Can only be called in the same package&#10;- private : All external calls not allowed&#10;&#10;7. super - Parent Reference&#10;&#10;8. super - Constructor&#10;&#10;9. ShopMain Solution">
      <created>1724737300432</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1724737300433</updated>
    </task>
    <task id="LOCAL-00012" summary="[Java Basic] Polymorphism1&#10;&#10;1. Polymorphism&#10;- Polymorphic Reference&#10;- Method overriding&#10;&#10;2. Polymorphism and Casting&#10;- upcasting : Change to parent type&#10;- downcasting : Change to child type&#10;&#10;3. Types of casting&#10;- Temporary casting&#10;&#10;4. Down_casting and Precaution&#10;&#10;5. Instanceof&#10;- When you want to determine the instance type that the variable refers to&#10;&#10;6. Polymorphism and Method overriding&#10;- Overridden methods always take precedence.">
      <created>1724912165783</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1724912165784</updated>
    </task>
    <task id="LOCAL-00013" summary="[Java Basic] Polymorphism1&#10;&#10;1. Polymorphism application&#10;- ex1 : Problems when polymorphism is not used &#10;- ex2 : Add inheritance&#10;- Deduplication using arrays and for statements&#10;&#10;2. Abstract class&#10;- ex3 : Abstract class and method&#10;- ex4 : a pure abstract class(Abstract class where all methods are abstract methods)&#10;&#10;3. Interface&#10;- ex5 : It is similar to a pure abstract class.&#10;- keyword : interface, implements(omission abstract class, public abstract)&#10;&#10;4. Interface - Multiple implementation&#10;&#10;5. Class and interface application">
      <created>1724918987400</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1724918987400</updated>
    </task>
    <task id="LOCAL-00014" summary="[Java Basic] Polymorphism and design&#10;&#10;1. OOP(Oriented Object Programming)&#10;&#10;2. Polymorphism - Role and implements&#10;&#10;3. OCP(Open-Closed Principle)&#10;&#10;4. solution">
      <created>1725019325779</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1725019325779</updated>
    </task>
    <task id="LOCAL-00015" summary="[Java Basic] Modify readme">
      <created>1725019717939</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1725019717939</updated>
    </task>
    <option name="localTasksCounter" value="16" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="initial commit" />
    <MESSAGE value="[Java Basic] Class and Data&#10;class declaration, how to use&#10;moviewreview solution&#10;productorder solution" />
    <MESSAGE value="[Java Basic] Basic type, Reference type&#10;varchange, null, exception, methodchange&#10;productorder refactoring solution and add scanner" />
    <MESSAGE value="[Java Basic] Object-Oriented Programming&#10;1. Procedural Programming &#10;refactoring(data bundling, method extraction) &#10;2. RectangleProcedural, Account solution" />
    <MESSAGE value="[Java Basic] Constructor&#10;1. The reason why constructor is necessary&#10;&#10;2. this method&#10;&#10;3. Use constructor in code&#10;&#10;4. Overloading and this() method&#10;&#10;5. Book solution" />
    <MESSAGE value="[Java Basic] Package&#10;1. How to use package&#10;&#10;2. Import &#10;&#10;3. Package rule&#10;&#10;4. Use the package" />
    <MESSAGE value="[Java Basic] Access Modifier&#10;1. How to use the access controller by controlling the volume of the speaker&#10;&#10;2. Access Controller Type&#10;- private, default, protected, public&#10;&#10;3. How to use access controllers in fields and methods&#10;&#10;4. How to use the access controller at the class level&#10;&#10;5. Encapsulation(BankAccount)&#10;&#10;6. MaxCounter, ShoppingCart solution" />
    <MESSAGE value="[Java Basic] Access Modifier &#10;Q.ShoppingCart resolving" />
    <MESSAGE value="[Java Basic] Java Memory Structure and Static&#10;&#10;1. Java Memory Structure&#10;&#10;2. Stack and Queue&#10;&#10;3. Stack Area&#10;&#10;4. Stack and Queue Area&#10;&#10;5. static variable&#10;&#10;6. static Method&#10;&#10;7. Solution&#10; - Car&#10; - MathArrayUtils" />
    <MESSAGE value="[Java Basic] final&#10;&#10;1. fianl variable &#10;- Reason for using final variable&#10;&#10;2. fianl variable and constant&#10;- constant keyword&#10;- use Upperword&#10;&#10;3. final variable and reference" />
    <MESSAGE value="[Java Basic] Inheritance&#10;&#10;1. An inheritance&#10;- the necessity of inheritance&#10;&#10;2. An inheritance relationship&#10;- keyword 'extends'&#10;- superclass and sub_class&#10;- Java doesn't support multiple inheritances.&#10;&#10;3. Inheritance and Memory Structure&#10;- Creating objects in inheritance relationships creates both parent and child classes.&#10;- When calling an inheritance relationship, the target type must be determined and the target type is found through the caller's type.&#10;- If the feature is not found in the current type, find it in the parent type, run it, and fail to find the feature, a compilation error occurs&#10;&#10;4. Inheritance and Add function&#10;&#10;5. Inheritance and Method Overriding&#10;&#10;6. Inheritance and Access Control&#10;- public : Allow all external calls&#10;- protected : Inheritance relationship can be called even if the package is the same or different&#10;- default : Can only be called in the same package&#10;- private : All external calls not allowed&#10;&#10;7. super - Parent Reference&#10;&#10;8. super - Constructor&#10;&#10;9. ShopMain Solution" />
    <MESSAGE value="[Java Basic] Polymorphism1&#10;&#10;1. Polymorphism&#10;- Polymorphic Reference&#10;- Method overriding&#10;&#10;2. Polymorphism and Casting&#10;- upcasting : Change to parent type&#10;- downcasting : Change to child type&#10;&#10;3. Types of casting&#10;- Temporary casting&#10;&#10;4. Down_casting and Precaution&#10;&#10;5. Instanceof&#10;- When you want to determine the instance type that the variable refers to&#10;&#10;6. Polymorphism and Method overriding&#10;- Overridden methods always take precedence." />
    <MESSAGE value="[Java Basic] Polymorphism1&#10;&#10;1. Polymorphism application&#10;- ex1 : Problems when polymorphism is not used &#10;- ex2 : Add inheritance&#10;- Deduplication using arrays and for statements&#10;&#10;2. Abstract class&#10;- ex3 : Abstract class and method&#10;- ex4 : a pure abstract class(Abstract class where all methods are abstract methods)&#10;&#10;3. Interface&#10;- ex5 : It is similar to a pure abstract class.&#10;- keyword : interface, implements(omission abstract class, public abstract)&#10;&#10;4. Interface - Multiple implementation&#10;&#10;5. Class and interface application" />
    <MESSAGE value="[Java Basic] Polymorphism and design&#10;&#10;1. OOP(Oriented Object Programming)&#10;&#10;2. Polymorphism - Role and implements&#10;&#10;3. OCP(Open-Closed Principle)&#10;&#10;4. solution" />
    <MESSAGE value="[Java Basic] Modify readme" />
    <option name="LAST_COMMIT_MESSAGE" value="[Java Basic] Modify readme" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/class1/ClassStart3.java</url>
          <line>4</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/java_basic$MathArrayUtilsMain.ic" NAME="MathArrayUtilsMain Coverage Results" MODIFIED="1724593587177" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>static2.ex.*</FILTER>
    </SUITE>
  </component>
</project>